{
  "version": 3,
  "sources": ["../../../app/context/ThemeContext.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\context\\\\\\\\ThemeContext.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\context\\\\ThemeContext.jsx\");\n  import.meta.hot.lastModified = \"1748799967247.9097\";\n}\n// REMIX HMR END\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nconst ThemeContext = createContext(undefined);\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('theme') || 'light';\n    }\n    return 'light';\n  });\n  useEffect(() => {\n    const root = window.document.documentElement;\n    // Apply theme on mount and when theme changes\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n\n    // Toggle the dark class on the html element\n    if (newTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  };\n  return <ThemeContext.Provider value={{\n    theme,\n    toggleTheme\n  }}>\r\n      {children}\r\n    </ThemeContext.Provider>;\n}\n_s(ThemeProvider, \"KfbYRAVVq/NtjqnM3aXyQVLTJ4Y=\");\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n// this file is used for toggle theme\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;AAsBA,mBAA+D;AAkCtD;AAvDT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAAtB,IACE,MAAM,aAAa;AAErB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,mBAAe,4BAAc,MAAS;AACrC,SAAS,cAAc;AAAA,EAC5B;AACF,GAAG;AACD,KAAG;AACH,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAS,MAAM;AACvC,QAAI,OAAO,WAAW,aAAa;AACjC,aAAO,aAAa,QAAQ,OAAO,KAAK;AAAA,IAC1C;AACA,WAAO;AAAA,EACT,CAAC;AACD,8BAAU,MAAM;AACd,UAAM,OAAO,OAAO,SAAS;AAE7B,QAAI,UAAU,QAAQ;AACpB,WAAK,UAAU,IAAI,MAAM;AAAA,IAC3B,OAAO;AACL,WAAK,UAAU,OAAO,MAAM;AAAA,IAC9B;AACA,iBAAa,QAAQ,SAAS,KAAK;AAAA,EACrC,GAAG,CAAC,KAAK,CAAC;AACV,QAAM,cAAc,MAAM;AACxB,UAAM,WAAW,UAAU,UAAU,SAAS;AAC9C,aAAS,QAAQ;AACjB,iBAAa,QAAQ,SAAS,QAAQ;AAGtC,QAAI,aAAa,QAAQ;AACvB,eAAS,gBAAgB,UAAU,IAAI,MAAM;AAAA,IAC/C,OAAO;AACL,eAAS,gBAAgB,UAAU,OAAO,MAAM;AAAA,IAClD;AAAA,EACF;AACA,SAAO,mDAAC,aAAa,UAAb,EAAsB,OAAO;AAAA,IACnC;AAAA,IACA;AAAA,EACF,GACK,YAJE;AAAA;AAAA;AAAA;AAAA,SAKL;AACJ;AACA,GAAG,eAAe,8BAA8B;AAChD,KAAK;AACE,SAAS,WAAW;AACzB,MAAI;AACJ,QAAM,cAAU,yBAAW,YAAY;AACvC,MAAI,YAAY,QAAW;AACzB,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAChE;AACA,SAAO;AACT;AAEA,IAAI,UAAU,8BAA8B;AAC5C,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
